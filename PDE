import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

L = 1.0
Nx = 50
Ny = 50
Nt = 1000
k = 0.01

dx = L/(Nx - 1)
dy = L/(Ny - 1)
dt = 0.001

u0 = np.zeros((Nx, Ny))
u0[int(0.4*Nx):int(0.6*Nx), int(0.4*Ny):int(0.6*Ny)] = 1.0

u = u0.copy()
for n in range(Nt):
    u_old = u.copy()
    for i in range(1, Nx-1):
        for j in range(1, Ny-1):
            u[i, j] = u_old[i, j] + k * dt * (
                (u_old[i+1, j] - 2*u_old[i, j] + u_old[i-1, j]) / dx**2 +
                (u_old[i, j+1] - 2*u_old[i, j] + u_old[i, j-1]) / dy**2
            )

    
    u[0, :] = u[-2, :]
    u[-1, :] = u[1, :]
    u[:, 0] = u[:, -2]
    u[:, -1] = u[:, 1]

x = np.linspace(0, L, Nx)
y = np.linspace(0, L, Ny)
X, Y = np.meshgrid(x, y)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, u, cmap='viridis')
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Temperatur')
plt.title('Numerisk l√∏sning av varmelikningen')
plt.show()
